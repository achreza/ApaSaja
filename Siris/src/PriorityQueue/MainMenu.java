/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PriorityQueue;

import java.util.Iterator;
import java.util.LinkedList;

/**
 *
 * @author 62852
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    private final LinkedList readyQueue = new LinkedList();
    private Process runningProcess = null;
    private final LinkedList blockingQueue = new LinkedList();
    private int createdProcesses = 0;
    private int contextSwitches = 0;
    String username;
    
    public MainMenu() {
        initComponents();
        
        historyTextArea.append("Log / History :\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        runningTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        readyTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        blockingTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addProcessField = new javax.swing.JTextField();
        txtNamaPasien = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addProcessButton = new javax.swing.JButton();
        deleteProcessField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        deleteProcessButton = new javax.swing.JButton();
        contextSwitchButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        historyTextArea = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        runningTextArea.setColumns(20);
        runningTextArea.setRows(5);
        jScrollPane1.setViewportView(runningTextArea);

        readyTextArea.setColumns(20);
        readyTextArea.setRows(5);
        jScrollPane2.setViewportView(readyTextArea);

        blockingTextArea.setColumns(20);
        blockingTextArea.setRows(5);
        jScrollPane3.setViewportView(blockingTextArea);

        jLabel1.setFont(new java.awt.Font("Yu Gothic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Menu Antrian Pasien");

        jLabel2.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Antrian");

        jLabel3.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Sedang Diproses");

        jLabel4.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ditunda");

        txtNamaPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaPasienActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nama");

        jLabel6.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Prioritas");

        addProcessButton.setBackground(new java.awt.Color(0, 0, 255));
        addProcessButton.setFont(new java.awt.Font("Yu Gothic", 0, 13)); // NOI18N
        addProcessButton.setForeground(new java.awt.Color(255, 255, 255));
        addProcessButton.setText("Tambah Antrian");
        addProcessButton.setBorder(null);
        addProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProcessButtonActionPerformed(evt);
            }
        });

        deleteProcessField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProcessFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Urutan Antrian");

        deleteProcessButton.setBackground(new java.awt.Color(204, 0, 51));
        deleteProcessButton.setFont(new java.awt.Font("Yu Gothic", 0, 14)); // NOI18N
        deleteProcessButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteProcessButton.setText("Hapus");
        deleteProcessButton.setBorder(null);
        deleteProcessButton.setMargin(new java.awt.Insets(10, 14, 10, 14));
        deleteProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProcessButtonActionPerformed(evt);
            }
        });

        contextSwitchButton.setBackground(new java.awt.Color(51, 153, 0));
        contextSwitchButton.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        contextSwitchButton.setForeground(new java.awt.Color(255, 255, 255));
        contextSwitchButton.setText("Lanjut Antrian");
        contextSwitchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contextSwitchButtonActionPerformed(evt);
            }
        });

        historyTextArea.setColumns(20);
        historyTextArea.setRows(5);
        jScrollPane4.setViewportView(historyTextArea);

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("X");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(514, 514, 514)
                                        .addComponent(deleteProcessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(85, 85, 85)
                                        .addComponent(addProcessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(129, 129, 129)
                                .addComponent(contextSwitchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(jLabel2)
                                .addGap(320, 320, 320)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(148, 148, 148))
                            .addComponent(jScrollPane4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNamaPasien, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(121, 121, 121)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(deleteProcessField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addProcessField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(23, 23, 23)))))
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(87, 87, 87)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(contextSwitchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(deleteProcessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNamaPasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deleteProcessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addProcessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(48, 48, 48)))
                        .addComponent(addProcessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaPasienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaPasienActionPerformed

    private void deleteProcessFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProcessFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteProcessFieldActionPerformed

    private void addProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProcessButtonActionPerformed
        // TODO add your handling code here:
        createdProcesses++;
        int enteredPriority = Integer.parseInt(addProcessField.getText());
        String nama = txtNamaPasien.getText();
        if(enteredPriority <= 0){
            enteredPriority = 1;
        }
        Process newProcess = new Process(createdProcesses, enteredPriority,nama);
        boolean addedProcess = readyQueue.add(newProcess);
        if (addedProcess){
            readyTextArea.append("Antrian#: " + String.valueOf(newProcess.getProcessNumber()) +" \n| Nama Pasien: " + txtNamaPasien.getText() + " | Prioritas: " + String.valueOf(enteredPriority) + "\n");
        }
        addProcessField.setText("");
        txtNamaPasien.setText("");
        historyTextArea.append("Menambahkan Antrian#: " + String.valueOf(createdProcesses) + " \n| Nama Pasien: " + txtNamaPasien.getText() +" | Prioritas: " + String.valueOf(enteredPriority) + "\n");
    
    }//GEN-LAST:event_addProcessButtonActionPerformed

    private void deleteProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProcessButtonActionPerformed
        // TODO add your handling code here:
        int deletedProcess = Integer.parseInt(deleteProcessField.getText());
        if(runningProcess != null && runningProcess.getProcessNumber() == deletedProcess){
            runningProcess = null;
            runningTextArea.setText("");
        } else{
            boolean removed = removeFromReadyQueue(deletedProcess);
            if(!removed){
                removeFromBlockingQueue(deletedProcess);
            }
        }
        deleteProcessField.setText("");
        historyTextArea.append("Menghapus Antrian#: " + String.valueOf(deletedProcess) + "\n");
        redrawReadyTextArea();
        redrawBlockingTextArea();
    }//GEN-LAST:event_deleteProcessButtonActionPerformed

    private void contextSwitchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contextSwitchButtonActionPerformed
        // TODO add your handling code here:
        if(runningProcess != null){
            runningProcess.doWork();
            if(runningProcess.getTimeToCompletion() == 0){
                historyTextArea.append("Antrian# " + runningProcess.getProcessNumber() + " Selesai.\n");
                runningProcess = null;
                runningTextArea.setText("");
            }
        }
        if(!readyQueue.isEmpty() || !blockingQueue.isEmpty()){
            updateQueues();
        }
        contextSwitches++;
        updateHistory(contextSwitches);
        redrawReadyTextArea();
        redrawBlockingTextArea();
    }//GEN-LAST:event_contextSwitchButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
     private boolean removeFromReadyQueue(int processID){
 
        
        for(Iterator<Process> iterator = readyQueue.iterator(); iterator.hasNext();){
            Process currentProcess = iterator.next();
            if(currentProcess.getProcessNumber() == processID){
                iterator.remove();
                return true;
            }
        }
        return false;
    }
    
    private void redrawReadyTextArea(){
        String readyProcesses = "";
        readyTextArea.setText("");
        
        for(Iterator<Process> iterator = readyQueue.iterator(); iterator.hasNext();){
            Process currentProcess = iterator.next();
            readyProcesses = readyProcesses.concat("Antrian#: " + String.valueOf(currentProcess.getProcessNumber()) + " \n| Nama Pasien: " + String.valueOf(currentProcess.getNama()) +" | Prioritas: " + String.valueOf(currentProcess.getPriority()) + "\n");
        }
        readyTextArea.setText(readyProcesses);
        
    }
    
    private void removeFromBlockingQueue(int processID){
 
        for(Iterator<Process> iterator = blockingQueue.iterator(); iterator.hasNext();){
            Process currentProcess = iterator.next();
            if(currentProcess.getProcessNumber() == processID){
                iterator.remove();
                break;
            }
        }
    }
    
    private void redrawBlockingTextArea(){
        
        String blockingProcesses = "";
        blockingTextArea.setText("");
        for(Iterator<Process> iterator = blockingQueue.iterator(); iterator.hasNext();){
            Process currentProcess = iterator.next();
            blockingProcesses = blockingProcesses.concat("Antrian#: " + String.valueOf(currentProcess.getProcessNumber()) +" \n| Nama Pasien: " + String.valueOf(currentProcess.getNama()) + " | Prioritas: " + String.valueOf(currentProcess.getPriority()) + "\n");
        }
        blockingTextArea.setText(blockingProcesses);
    }
    
    private void updateQueues(){
        
        
        int highestPriority = 10000;
        Process newRunningProcess = runningProcess;
        if(runningProcess != null){
            highestPriority = runningProcess.getPriority();
        }
        for(Iterator<Process> iterator = readyQueue.iterator(); iterator.hasNext();){
            Process currentProcess = iterator.next();
            int currentPriority = currentProcess.getPriority();
            if(currentPriority < highestPriority){
                newRunningProcess = currentProcess;
                highestPriority = currentPriority;
            }
        }
        for(Iterator<Process> iterator = blockingQueue.iterator(); iterator.hasNext();){
            Process currentProcess = iterator.next();
            int currentPriority = currentProcess.getPriority();
            if((currentPriority < highestPriority)){
                newRunningProcess = currentProcess;
                highestPriority = currentPriority;
            }
        }
        if(runningProcess != null && newRunningProcess.getProcessNumber() != runningProcess.getProcessNumber()){
            blockingQueue.add(runningProcess);
            redrawBlockingTextArea();
            runningProcess = newRunningProcess;
            boolean removed = removeFromReadyQueue(newRunningProcess.getProcessNumber());
            if(!removed){
                removeFromBlockingQueue(newRunningProcess.getProcessNumber());
            }
        } else{
            boolean removed = removeFromReadyQueue(newRunningProcess.getProcessNumber());
            if(!removed){
                removeFromBlockingQueue(newRunningProcess.getProcessNumber());
            }
            runningProcess = newRunningProcess;
        }
        runningTextArea.setText("");
        runningTextArea.append("Antrian#:" + String.valueOf(runningProcess.getProcessNumber()) +" \n| Nama Pasien: " +String.valueOf(runningProcess.getNama()) + " | Prioritas:" + String.valueOf(runningProcess.getPriority()) + "\n");
    }
    
    private void updateHistory(int contextSwitches){
        historyTextArea.append("===================================================\n");
        historyTextArea.append("Status Sistem setelah " + String.valueOf(contextSwitches) + " Lanjut Antrian.\n");
        historyTextArea.append("Sedang Diproses:\n");
        if (runningProcess !=  null){
            historyTextArea.append("Antrian#: " + String.valueOf(runningProcess.getProcessNumber()) +" \n| Nama Pasien: " + String.valueOf(runningProcess.getNama()) + " | Prioritas: " + String.valueOf(runningProcess.getPriority()) + "\n");
        }
        historyTextArea.append("\n");
        historyTextArea.append("Sedang Dalam Antrian:\n");
        for(Iterator<Process> iterator = readyQueue.iterator(); iterator.hasNext();){
            Process currentProcess = iterator.next();
            historyTextArea.append("Antrian#: " + String.valueOf(currentProcess.getProcessNumber()) +" \n| Nama Pasien: " + String.valueOf(runningProcess.getNama()) + " | Prioritas: " + String.valueOf(currentProcess.getPriority()) + "\n");
        }
        historyTextArea.append("\n");
        historyTextArea.append("Antrian Ditunda:\n");
        for(Iterator<Process> iterator = blockingQueue.iterator(); iterator.hasNext();){
            Process currentProcess = iterator.next();
            historyTextArea.append("Antrian#: " + String.valueOf(currentProcess.getProcessNumber()) +" \n| Nama Pasien: " + String.valueOf(runningProcess.getNama()) + " | Prioritas: " + String.valueOf(currentProcess.getPriority()) + "\n");
        }
        historyTextArea.append("\n");
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProcessButton;
    private javax.swing.JTextField addProcessField;
    private javax.swing.JTextArea blockingTextArea;
    private javax.swing.JButton contextSwitchButton;
    private javax.swing.JButton deleteProcessButton;
    private javax.swing.JTextField deleteProcessField;
    private javax.swing.JTextArea historyTextArea;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea readyTextArea;
    private javax.swing.JTextArea runningTextArea;
    private javax.swing.JTextField txtNamaPasien;
    // End of variables declaration//GEN-END:variables
}
